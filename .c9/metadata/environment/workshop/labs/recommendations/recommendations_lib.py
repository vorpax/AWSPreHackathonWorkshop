{"filter":false,"title":"recommendations_lib.py","tooltip":"/workshop/labs/recommendations/recommendations_lib.py","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["import boto3","import chromadb","from chromadb.utils.embedding_functions import AmazonBedrockEmbeddingFunction",""],"id":1}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":4,"column":0},"end":{"row":12,"column":0},"action":"insert","lines":["def get_collection(path, collection_name):","    session = boto3.Session()","    embedding_function = AmazonBedrockEmbeddingFunction(session=session, model_name=\"amazon.titan-embed-text-v2:0\")","    ","    client = chromadb.PersistentClient(path=path)","    collection = client.get_collection(collection_name, embedding_function=embedding_function)","    ","    return collection",""],"id":3}],[{"start":{"row":12,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":14,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["def get_vector_search_results(collection, question):","    ","    results = collection.query(","        query_texts=[question],","        n_results=4","    )","    ","    return results",""],"id":5}],[{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["",""],"id":6},{"start":{"row":23,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":24,"column":0},"end":{"row":49,"column":0},"action":"insert","lines":["def get_personalized_recommendation(question, description):","    session = boto3.Session()","    bedrock = session.client(service_name='bedrock-runtime')","    ","    message = {","        \"role\": \"user\",","        \"content\": [","            { \"text\": f\"<service_description>{description}</service_description>\" },","            { \"text\": \"Based on the service description above, please summarize how it addresses the following requirements:\" },","            { \"text\": f\"<requirements>{question}</requirements>\" }","        ]","    }","    ","    response = bedrock.converse(","        modelId=\"anthropic.claude-3-sonnet-20240229-v1:0\",","        messages=[message],","        inferenceConfig={","            \"maxTokens\": 2000,","            \"temperature\": 0,","            \"topP\": 0.9,","            \"stopSequences\": []","        },","    )","    ","    return response['output']['message']['content'][0]['text']",""],"id":7}],[{"start":{"row":49,"column":0},"end":{"row":50,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":50,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":51,"column":0},"end":{"row":75,"column":0},"action":"insert","lines":["def get_similarity_search_results(question):","","    session = boto3.Session()","    bedrock = session.client(service_name='bedrock-runtime')","    ","    collection = get_collection(\"../../data/chroma\", \"services_collection\")","    ","    search_results = get_vector_search_results(collection, question)","    ","    num_results = len(search_results['documents'][0])","    ","    results_list = []","    ","    for i in range(num_results):","        personalized_recommendation = get_personalized_recommendation(question, search_results['documents'][0][i])","        ","        results_list.append({","            'original': search_results['documents'][0][i],","            'summary': personalized_recommendation,","            'name': search_results['metadatas'][0][i]['name'],","            'url': search_results['metadatas'][0][i]['url'],","        })","    ","    return results_list",""],"id":9}]]},"ace":{"folds":[],"scrolltop":829,"scrollleft":0,"selection":{"start":{"row":21,"column":18},"end":{"row":21,"column":18},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":54,"state":"start","mode":"ace/mode/python"}},"timestamp":1737193059020,"hash":"4bdc13be97c958276d31e10b4a32aaefc55e3d36"}