{"filter":false,"title":"csv_lib.py","tooltip":"/workshop/labs/csv/csv_lib.py","undoManager":{"mark":4,"position":4,"stack":[[{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["import boto3","import pandas as pd",""],"id":1}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":3,"column":0},"end":{"row":52,"column":0},"action":"insert","lines":["def get_tools():","    tools = [","        {","            \"toolSpec\": {","                \"name\": \"summarize_email\",","                \"description\": \"Summarize email content.\",","                \"inputSchema\": {","                    \"json\": {","                        \"type\": \"object\",","                        \"properties\": {","                            \"escalate_complaint\": {","                                \"type\": \"boolean\",","                                \"description\": \"Indicates if this email is serious enough to be immediately escalated for further review.\"","                            },","                            \"level_of_concern\": {","                                \"type\": \"integer\",","                                \"description\": \"Rate the level of concern for the above content on a scale from 1-10\",","                                \"minimum\": 1,","                                \"maximum\": 10","                            },","                            \"overall_sentiment\": {","                                \"type\": \"string\",","                                \"description\": \"The sender's overall sentiment.\",","                                \"enum\": [\"Positive\", \"Neutral\", \"Negative\"]","                            },","                            \"supporting_business_unit\": {","                                \"type\": \"string\",","                                \"description\": \"The internal business unit that this email should be routed to.\",","                                \"enum\": [\"Sales\", \"Operations\", \"Customer Service\", \"Fund Management\"]","                            }","                        },","                        \"summary\": {","                            \"type\": \"string\",","                            \"description\": \"A brief one-line or two-line summary of the email.\"","                        },","                        \"required\": [","                            \"escalate_complaint\",","                            \"level_of_concern\",","                            \"overall_sentiment\",","                            \"supporting_business_unit\",","                            \"summary\"","                        ]","                    }","                }","            }","        }","    ]","","    return tools",""],"id":3}],[{"start":{"row":52,"column":0},"end":{"row":53,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":53,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":54,"column":0},"end":{"row":101,"column":0},"action":"insert","lines":["def get_csv_response(input_content): #text-to-text client function","","    session = boto3.Session()","    bedrock = session.client(service_name='bedrock-runtime')","    ","    tool_list = get_tools()","    ","    message = {","        \"role\": \"user\",","        \"content\": [","            { \"text\": f\"<content>{input_content}</content>\" },","            { \"text\": \"Please use the summarize_email tool to generate the email summary JSON based on the content within the <content> tags.\" }","        ],","    }","    ","    response = bedrock.converse(","        modelId=\"anthropic.claude-3-sonnet-20240229-v1:0\",","        messages=[message],","        inferenceConfig={","            \"maxTokens\": 2000,","            \"temperature\": 0","        },","        toolConfig={","            \"tools\": tool_list,","            \"toolChoice\": {","                \"tool\": {","                    \"name\": \"summarize_email\"","                }","            }","        }","    )","    ","    ","    response_message = response['output']['message']","    ","    response_content_blocks = response_message['content']","    ","    content_block = next((block for block in response_content_blocks if 'toolUse' in block), None)","    ","    tool_use_block = content_block['toolUse']","    ","    tool_result_dict = tool_use_block['input']","    ","    data_frame = pd.DataFrame.from_dict([tool_result_dict])","    csv = data_frame.to_csv(index = False)","    ","    return data_frame, csv",""],"id":5}]]},"ace":{"folds":[],"scrolltop":1030,"scrollleft":0,"selection":{"start":{"row":101,"column":0},"end":{"row":101,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":67,"state":"start","mode":"ace/mode/python"}},"timestamp":1737194152623,"hash":"f3a7b135a28dd35a95a46413900c8164e79057c8"}