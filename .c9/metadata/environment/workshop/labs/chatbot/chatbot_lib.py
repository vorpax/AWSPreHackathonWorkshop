{"filter":false,"title":"chatbot_lib.py","tooltip":"/workshop/labs/chatbot/chatbot_lib.py","undoManager":{"mark":4,"position":4,"stack":[[{"start":{"row":0,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["import boto3","","MAX_MESSAGES = 20","","class ChatMessage(): #create a class that can store image and text messages","    def __init__(self, role, text):","        self.role = role","        self.text = text",""],"id":1}],[{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":10,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["def convert_chat_messages_to_converse_api(chat_messages):","    messages = []","    ","    for chat_msg in chat_messages:","        messages.append({","            \"role\": chat_msg.role,","            \"content\": [","                {","                    \"text\": chat_msg.text","                }","            ]","        })","            ","    return messages",""],"id":3}],[{"start":{"row":24,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":25,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":26,"column":0},"end":{"row":59,"column":0},"action":"insert","lines":["def chat_with_model(message_history, new_text=None):","    session = boto3.Session()","    bedrock = session.client(service_name='bedrock-runtime') #creates a Bedrock client","    ","    new_text_message = ChatMessage('user', text=new_text)","    message_history.append(new_text_message)","    ","    number_of_messages = len(message_history)","    ","    if number_of_messages > MAX_MESSAGES:","        del message_history[0 : (number_of_messages - MAX_MESSAGES) * 2] #make sure we remove both the user and assistant responses","    ","    messages = convert_chat_messages_to_converse_api(message_history)","    ","    response = bedrock.converse(","        modelId=\"anthropic.claude-3-sonnet-20240229-v1:0\",","        messages=messages,","        inferenceConfig={","            \"maxTokens\": 2000,","            \"temperature\": 0,","            \"topP\": 0.9,","            \"stopSequences\": []","        },","    )","    ","    output = response['output']['message']['content'][0]['text']","    ","    response_message = ChatMessage('assistant', output)","    ","    message_history.append(response_message)","    ","    return","",""],"id":5}]]},"ace":{"folds":[],"scrolltop":353,"scrollleft":0,"selection":{"start":{"row":47,"column":31},"end":{"row":47,"column":31},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":22,"state":"start","mode":"ace/mode/python"}},"timestamp":1737188448329,"hash":"cfcdc0a3dc48c40374355dd19c8dc7b626b9769b"}