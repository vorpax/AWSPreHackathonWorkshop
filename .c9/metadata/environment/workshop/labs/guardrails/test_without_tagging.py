{"filter":false,"title":"test_without_tagging.py","tooltip":"/workshop/labs/guardrails/test_without_tagging.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["import random, string, boto3, json, pprint, test_helper as glib","","prompt = glib.get_prompt_from_command_line()","guardrail_id = glib.get_guardrail_id('prompt_attack_guardrail_id')","","session = boto3.Session()","bedrock = session.client(service_name='bedrock-runtime') #creates a Bedrock client","","#randomize the input tagging suffix. This reduces the likelihood of successfully circumventing input tagging.","input_tagging_suffix = \"\".join(random.choices(string.ascii_lowercase, k=8))","","merged_prompt_template = f\"\"\"Respond to the question as if you were a pirate.","{prompt}\"\"\"","","body = {","    \"inputText\": merged_prompt_template,","    \"textGenerationConfig\": {","        \"maxTokenCount\": 512,","        \"stopSequences\": [],","        \"temperature\": 0,","        \"topP\": 0.9","    },","    \"amazon-bedrock-guardrailConfig\": {","        \"tagSuffix\": input_tagging_suffix","    }","}","","response = bedrock.invoke_model(","    body=json.dumps(body),","    modelId=\"amazon.titan-text-express-v1\",","    contentType=\"application/json\",","    accept=\"application/json\",","    guardrailIdentifier=guardrail_id,","    guardrailVersion=\"DRAFT\", #this is fine during development, but we should set this to a specific version number for testing and production.","    trace=\"ENABLED\" #Set trace to \"ENABLED\" to see the details of guardrail actions, otherwise set to \"DISABLED\"",")","","response_body = json.loads(response.get('body').read()) # read the response","","pprint.pp(response_body)",""],"id":1}]]},"ace":{"folds":[],"scrolltop":114,"scrollleft":0,"selection":{"start":{"row":40,"column":0},"end":{"row":40,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":24,"state":"start","mode":"ace/mode/python"}},"timestamp":1737202643515,"hash":"3222ee6154fceb51b6a260e024c5001021457974"}